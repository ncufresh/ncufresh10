<?php	
/**
 * Armored Core - Database Class
 * Control MySQL database, and record all operations of query
 */
require_once('ac_common.php');

/**
 * if ac_database_sql_operations_log==true, all querying operations will be recorded
 * Close it if current program is not beta
 */
define('ac_database_sql_operations_log', true);

class ac_database
{
	var $host;
	var $username;
	var $password;
	var $db_name;
	
	var $curr_db_resource_id;
	
	var $sql_operations_log = array();
	
	/**
	 * Constructor
	 */
	function __construct($input_host, $input_username, $input_password, $input_db_name)
	{
		$this -> host = $input_host;
		$this -> username = $input_username;
		$this -> password = $input_password;
		$this -> db_name = $input_db_name;
		
		$this -> curr_db_resource_id = @mysql_connect(($this -> host), ($this -> username), ($this -> password));
		
		@mysql_select_db(($this -> db_name),($this -> curr_db_resource_id));
		if(mysql_errno($this -> curr_db_resource_id) != 0 && ac_database_sql_operations_log)
		{
			array_push($this -> sql_operations_log, ("<strong>Armored Core</strong>: ac_database:: constructor(): ".mysql_errno($this -> curr_db_resource_id).": ".mysql_error($this -> curr_db_resource_id)."<br /><i><u>Error while selecting the database @ ".__FILE__." LINE ".__LINE__.".</u></i><br /><br />"));
		}
		
		mysql_query("SET NAMES utf8", $this -> curr_db_resource_id);
	}
	
	/**
	 * Desstructor
	 */
	function __destruct()
	{
		$this -> sql_close($this -> curr_db_resource_id);
	}
	
	/**
	 * sql_query(string): resource
	 * Corresponding to 'mysql_query()'
	 *
	 * (String) strsql: SQL commands written in SQL language
	 */
	function sql_query($strsql)
	{
		$src =  mysql_query($strsql,  $this -> curr_db_resource_id);
		if(ac_database_sql_operations_log)
		{
			array_push($this -> sql_operations_log, ("<strong>Armored Core</strong>: ac_database:: sql_query(): Error number = ".mysql_errno($this -> curr_db_resource_id).": ".mysql_error($this -> curr_db_resource_id)."<br /><i><u>".$strsql."</u></i><br /><br />"));
		}
		return $src;
	}
	
	/**
	 * sql_insert_id(): int
	 * Corresponding to 'mysql_insert_id()', fetch the last AUTO_INCREMENT id generated by 'mysql_query("INSERT ...") '
	 *
	 * @return the last id fetched from AUTO_INCREMENT
	 */
	function sql_insert_id()
	{
		return mysql_insert_id();
	}
	
	/**
	 * sql_print_msg(): void
	 * Print all querying operations that connecting with MySQL
	 */
	function sql_print_msg()
	{
		for($i=0; $i<count($this -> sql_operations_log); $i++)
		{
			echo $this -> sql_operations_log[$i];
		}
	}
	
	/**
	 * sql_num_rows(resource): int
	 * Corresponding to 'mysql_num_rows()'
	 *
	 * (resource) input_sql_result: Resource of connection after SQL commands executed
	 */
	function sql_num_rows($input_sql_result)
	{
		return mysql_num_rows($input_sql_result);
	}
	
	/**
	 * sql_fetch_array(resource): mixed[]
	 * Corresponding to 'mysql_fetch_array()'
	 *
	 * (resource) input_sql_result: Resource of connection after SQL commands executed
	 */
	function sql_fetch_array($input_sql_result)
	{
		return mysql_fetch_array($input_sql_result);
	}
	
	/**
	 * sql_close(): void
	 * Corresponding to 'mysql_close()'
	 */
	function sql_close()
	{
		if($this ->curr_db_resource_id)
		{
			return mysql_close($this -> curr_db_resource_id);
		}
	}
	
	/**
	 * sql_version(): String
	 * Return the version of MySQL
	 */
	function sql_version()
	{
		return "MySQL ".mysql_get_server_info();
	}
}
?>
